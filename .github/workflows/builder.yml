name: .NET

on:
  push:
    branches: 
      - Version-2.0
      - deploy
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore    
    - name: Get commit hash
      id: vars
      shell: bash
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Read version number from file
      id: package
      uses: juliangruber/read-file-action@v1
      with:
        path: ./VersionNumber.txt
    - name: Create version number
      run: |
        echo "Full version number: ${{ steps.package.outputs.content }}.${{github.run_number}}-${{ steps.vars.outputs.sha_short }}"
        echo "full_version_number=${{ steps.package.outputs.content }}.${{github.run_number}}-${{ steps.vars.outputs.sha_short }}" >> $GITHUB_ENV
        echo "Full version number saved: ${{ env.full_version_number }}"
    - name: Read Version number
      run: |
        echo "Full version number saved: ${{ env.full_version_number }}"
    - name: Build    
      run: dotnet build -c Release --no-restore --no-incremental -p:VersionPrefix=${{ steps.version.outputs.number }}.${{github.run_number}} --version-suffix=${{ steps.vars.outputs.sha_short }}
    - name: Test
      run: dotnet test -c Release --no-build --verbosity normal
    - name: Create artifacts folder
      run: |
        mkdir ${{ github.workspace }}/artifacts
        mkdir ${{ github.workspace }}/artifacts/Tolk.Web
        mkdir ${{ github.workspace }}/artifacts/Tolk.Web.Api
        mkdir ${{ github.workspace }}/artifacts/Tolk.Migration
    - name: Create web artifact
      run: dotnet publish ./Tolk.Web/Tolk.Web.csproj -c Release --no-build -o "${{ github.workspace }}/artifacts/Tolk.Web" -p:VersionPrefix=${{ steps.version.outputs.number }}.${{github.run_number}} --version-suffix=${{ steps.vars.outputs.sha_short }}
    - name: Create api artifact
      run: dotnet publish ./Tolk.Web.Api/Tolk.Web.Api.csproj -c Release --no-build -o "${{ github.workspace }}/artifacts/Tolk.Web.Api" -p:VersionPrefix=${{ steps.version.outputs.number }}.${{github.run_number}} --version-suffix=${{ steps.vars.outputs.sha_short }}
    - name: Create migration artifact
      run: |
        dotnet tool install --global dotnet-ef
        dotnet ef migrations script -o "${{ github.workspace }}/artifacts/Tolk.Migration/TolkMigrate.sql" --startup-project "./Tolk.Web/Tolk.Web.csproj" -p "./Tolk.BusinessLogic/Tolk.BusinessLogic.csproj" -i
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      if: github.ref == 'refs/heads/deploy'
      with:
        name: package-artifacts
        path: ${{ github.workspace }}/artifacts/
        retention-days: 1
  deploy:
    needs: build
    if: github.ref == 'refs/heads/deploy'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Read release number
      run: |
        echo "Full version number saved: ${{ env.VERSION_NUMBER }}"
    - name: Get Artifacts
      uses: actions/download-artifact@v3
      with:
        name: package-artifacts
        path: ${{ github.workspace }}/artifacts
    - name: Create artifacts folder
      run: |
        mkdir ${{ github.workspace }}/artifacts/packages
