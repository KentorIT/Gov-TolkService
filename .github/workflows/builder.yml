name: .NET

on:
  push:
    branches: [ "Version-2.0" ]
  pull_request:
    branches: [ "Version-2.0" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore    
    - name: Get commit hash
      id: vars
      shell: bash
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Read version number from file
      id: package
      uses: juliangruber/read-file-action@v1
      with:
        path: ./VersionNumber.txt
    - name: Get version number          
      id: version
      shell: bash
      run: |
        echo "::set-output name=number::${{ steps.package.outputs.content }}"
    - name: Create version number
      run: |
        echo "Sha: ${{ steps.vars.outputs.sha_short }}"
        echo "Version number: ${{ steps.version.outputs.number }}"
        echo "Full version number: ${{ steps.version.outputs.number }}.${{github.run_number}}-${{ steps.vars.outputs.sha_short }}"
    - name: Build    
      run: dotnet build -c Release --no-restore --no-incremental -p:VersionPrefix=${{ steps.version.outputs.number }}.${{github.run_number}} --version-suffix=${{ steps.vars.outputs.sha_short }}
    - name: Test
      run: dotnet test -c Release --no-build --verbosity normal
    - name: Create artifacts folder
      run: |
        mkdir "$GITHUB_WORKSPACE/artifacts"
        mkdir "$GITHUB_WORKSPACE/artifacts/Tolk.Web"
        mkdir "$GITHUB_WORKSPACE/artifacts/Tolk.Web.Api"
        mkdir "$GITHUB_WORKSPACE/artifacts/Tolk.Migration"
    - name: Create web artifact
      run: dotnet publish ./Tolk.Web/Tolk.Web.csproj -c Release --no-build -o "$GITHUB_WORKSPACE/artifacts/Tolk.Web" -p:VersionPrefix=${{ steps.version.outputs.number }}.${{github.run_number}} --version-suffix=${{ steps.vars.outputs.sha_short }}
    - name: Create api artifact
      run: dotnet publish ./Tolk.Web.Api/Tolk.Web.Api.csproj -c Release --no-build -o "$GITHUB_WORKSPACE/artifacts/Tolk.Web.Api" -p:VersionPrefix=${{ steps.version.outputs.number }}.${{github.run_number}} --version-suffix=${{ steps.vars.outputs.sha_short }}
    - name: Create migration artifact
      run: |
        dotnet tool install --global dotnet-ef
        dotnet ef migrations script -o "$GITHUB_WORKSPACE/artifacts/Tolk.Migration/TolkMigrate.sql" --startup-project "./Tolk.Web/Tolk.Web.csproj" -p "./Tolk.BusinessLogic/Tolk.BusinessLogic.csproj" -i
    - name:  
      uses: actions/upload-artifact@v3
      with:
        name: package-artifacts
        path: "$GITHUB_WORKSPACE/artifacts"
  deploy:
    needs: build    
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Get Artifacts
      uses: actions/download-artifact@v3
      with:
        name: my-artifact
        path: "$GITHUB_WORKSPACE/artifacts"
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: "$GITHUB_WORKSPACE/artifacts"