@model OrderGroupModel
@inject HelpLinkService HelpLinkService
@using Tolk.Web.Services
@using Tolk.BusinessLogic.Utilities
@using Tolk.BusinessLogic.Enums

@{
    ViewData["Title"] = "Sammanhållen bokning " + Model.OrderGroupNumber;
}
<section aria-label="@ViewData["Title"]">
    <section aria-label="Bokningshuvud">
        <div class="row">
            <div class="col-sm-12 order-header-contract-info">
                Avrop från ramavtal för tolkförmedlingstjänster 23.3-9066-16
                <div class="help-sign-big">
                    @HelpLinkService.HeaderAnchor()
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3">
                <div class="@Model.ColorClassName">
                    <display-entry asp-for="Status" />
                </div>
            </div>
            <div class="col-sm-3">
                <display-entry asp-for="AssignmentType" />
            </div>
            <div class="col-sm-3">
                <display-entry asp-for="OrderGroupNumber" />
            </div>
            <div class="col-sm-3">
                <display-entry asp-for="CreatedAt" />
            </div>
        </div>
    </section>
    <section aria-label="Sammanhållen bokning">
        <div class="row">
            <div class="col-sm-12">
                <h1>@ViewData["Title"]</h1>
                @if (Model.Status == OrderStatus.NoBrokerAcceptedOrder || Model.Status == OrderStatus.NoDeadlineFromCustomer)
                {
                    <div class="row">
                        <br />
                        <div class="col-sm-6">
                            @if (Model.Status == OrderStatus.NoBrokerAcceptedOrder)
                            {
                                <span>Bokningsförfrågan avböjd av samtliga förmedlingar, bokningsförfrågan avslutad.</span>
                            }
                            else if (Model.Status == OrderStatus.NoDeadlineFromCustomer)
                            {
                                <span>Ingen sista svarstid satt av myndighet, bokningsförfrågan avslutad.</span>
                            }
                        </div>
                        @*@if (Model.AllowNoAnswerConfirmation)
                {
                    <div class="col-sm-6">
                        <form method="post" action="@Url.Action("ConfirmNoAnswer", "Order", new { OrderId = Model.OrderId })" asp-antiforgery="true">
                            <button class="btn btn-primary btn-large pull-right">Arkivera <span class="center-glyphicon glyphicon glyphicon-ok"></span></button>
                        </form>
                        <br />
                    </div>
                }*@
                    </div>
                }
                else
                {
                    @await Html.PartialAsync("_GroupRequestSummary", Model.ActiveRequestGroup, new ViewDataDictionary(ViewData) { { "showHeader", false }, { "isBroker", false } })
                }
                @if (Model.PreviousRequestGroups.Any())
                {
                    <div class="row">
                        <div class="col-sm-12">
                            <label>Tidigare förmedlingars svar</label>
                            <ul>
                                @foreach (var request in Model.PreviousRequestGroups)
                                {
                                    if (request.Status != RequestStatus.AwaitingDeadlineFromCustomer
                                        && request.Status != RequestStatus.NoDeadlineFromCustomer)
                                    {
                                        <li class="detail-text">
                                            @request.BrokerName (@EnumHelper.GetDescription(request.Status))
                                            @if (!string.IsNullOrWhiteSpace(request.DenyMessage))
                                            {
                                                <span> Orsak: @request.DenyMessage</span>
                                            }
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                }
                @await Html.PartialAsync("_OccasionList", Model.OccasionList)
                @await Html.PartialAsync("_GroupOrderSummary", Model, new ViewDataDictionary(ViewData) { { "isCollapsible", true }, { "displayGeneralOrderInfo", (Model.Status == OrderStatus.NoBrokerAcceptedOrder || Model.Status == OrderStatus.NoDeadlineFromCustomer) }, { "helplink", "myndighet-sammanfattning-sammanhallen-bokning/" } })
                <div class="padding-top-10"></div>
                @await Html.PartialAsync("_GroupCustomerInfo", Model.CustomerInformationModel)
                @if (Model.AllowNoAnswerConfirmation)
                {
                    <div class="col-sm-6">
                        <form method="post" action="@Url.Action("ConfirmNoAnswer", "OrderGroup", new { OrderGroupId = Model.OrderGroupId })" asp-antiforgery="true">
                            <button class="btn btn-primary btn-large pull-right">Arkivera <span class="center-glyphicon glyphicon glyphicon-ok"></span></button>
                        </form>
                        <br />
                    </div>
                }
                @if (Model.AllowProcessing)
                {
                    <div class="col-sm-12 to-accept-info">
                        Myndighet har accepterat överskridande av gränsvärde för resor för detta uppdrag, dvs över 2 tim restid eller 100 km reslängd. Den bedömda resekostnaden (exkl. moms) som angivits av förmedlingen och ska godkännas är per tillfälle och tolk. Se information ovan för bedömd kostnad och eventuell information.
                    </div>
                }
                @if (Model.AllowOrderGroupCancellation)
                {
                    <div class="col-sm-4">
                        <form method="post" class="cancel-form" action="@Url.Action("Cancel", "OrderGroup", new { OrderGroupId = Model.OrderGroupId })" asp-antiforgery="true">
                            <input name="CancelMessage" type="hidden" />
                            <button class="btn cancel-button btn-warning btn-large">Avboka alla ej utförda uppdrag för sammanhållen bokning</button>
                            @HelpLinkService.ButtonHelpIcon("myndighet-avboka-uppdrag")
                        </form>
                    </div>
                }
                @if (Model.AllowPrint)
                {
                    <div class="col-sm-4">
                        <a class="btn btn-primary btn-large" href="@Url.Action("Print", "OrderGroup", new { id = Model.OrderGroupId })">Skriv ut bekräftelse &nbsp;<span class="center-glyphicon glyphicon glyphicon-print"></span></a>
                    </div>
                }
                @if (Model.AllowProcessing)
                {
                    <div class="col-sm-4">
                        <form method="post" class="deny-form text-align-center" action="@Url.Action("Deny", "OrderGroup", new { RequestGroupId = Model.RequestGroupId})" asp-antiforgery="true">
                            <input name="DenyMessage" type="hidden" />
                            <button class="btn deny-button btn-danger btn-large">Underkänn tillsättning</button>
                            @HelpLinkService.ButtonHelpIcon("myndighet-underkann-tillsattning")
                        </form>
                    </div>
                    <div class="col-sm-4 pull-right">
                        <form method="post" action="@Url.Action("Approve", "OrderGroup", new { RequestGroupId = Model.RequestGroupId})" asp-antiforgery="true">
                            <button class="btn btn-default btn-success btn-large">Godkänn tillsättning <span class="center-glyphicon glyphicon glyphicon-ok"></span></button>
                            @HelpLinkService.ButtonHelpIcon("myndighet-godkann-tillsattning")
                        </form>
                    </div>
                }
                @if (Model.AllowUpdateExpiry)
                {
                    <form method="post" action="@Url.Action("UpdateExpiry", "OrderGroup", new { OrderGroupId = Model.OrderGroupId})" asp-antiforgery="true">
                        <div class="row">
                            <div class="col-sm-8">
                                <input asp-for="StartAt" type="hidden" />
                                <form-entry asp-for="LatestAnswerBy"></form-entry>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <button id="updateLatestAnswerBy" class="btn btn-default btn-success btn-large">Uppdatera svarstid <span class="center-glyphicon glyphicon glyphicon-triangle-right"></span></button>
                            </div>
                        </div>
                    </form>
                }

            </div>
        </div>
    </section>

    <div id="cancelMessageDialog" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h2 class="modal-title">Meddelande vid avbokning</h2>
                </div>
                <div class="modal-body">
                    <form class="do-not-check-dirty">
                        <form-entry asp-for="CancelMessage" />
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-warning do-not-check-dirty pull-left" data-dismiss="modal">Avbryt</button>
                    <button type="button" class="btn btn-default send-message pull-right">Avboka</button>
                </div>
            </div>
        </div>
    </div>

    <div id="denyMessageDialog" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h2 class="modal-title">Meddelande vid underkännande</h2>
                </div>
                <div class="modal-body">
                    <form class="do-not-check-dirty">
                        <form-entry asp-for="DenyMessage" />
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-warning do-not-check-dirty pull-left" data-dismiss="modal">Avbryt</button>
                    <button type="button" class="btn btn-default send-message pull-right">Skicka</button>
                </div>
            </div>
        </div>
    </div>
</section>


@section Scripts {
    <environment include="Development">
        <script src="~/js/Order/SetExpiry.js" asp-append-version="true"></script>
        <script src="~/js/OrderGroup/View.js" asp-append-version="true"></script>
        <script src="~/js/Files.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/Order/SetExpiry.min.js" asp-append-version="true"></script>
        <script src="~/js/OrderGroup/View.min.js" asp-append-version="true"></script>
        <script src="~/js/Files.min.js" asp-append-version="true"></script>
    </environment>
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
