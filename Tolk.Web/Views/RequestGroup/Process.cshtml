@model RequestGroupProcessModel
@inject SelectListService SelectListService
@inject HelpLinkService HelpLinkService
@using Tolk.Web.Services
@using Tolk.BusinessLogic.Utilities
@{
    ViewData["Title"] = "Svara på sammanhållen bokningsförfrågan";
    var declineHeader = "Tacka nej till bokning";
    HelpLinkService.PageName = "formedling-besvara-sammanhallen-bokningsforfragan";
    var headerHelpLink = HelpLinkService.PageName;
    var competenceInfo = Model.SpecificCompetenceLevelRequired ? "Krav på kompetensnivå tolk" : "Önskemål om kompetensnivå tolk";
}
<section aria-label="@ViewData["Title"]">
    <div class="row">
        <div class="col-sm-12">
            <section aria-label="Bokningshuvud">
                <div class="row">
                    <div class="col-sm-12 order-header-contract-info">
                        Avrop från ramavtal för tolkförmedlingstjänster 23.3-9066-16
                        <div class="help-sign-big">
                            @HelpLinkService.HeaderAnchor()
                        </div>
                    </div>
                </div>
                @if (!string.IsNullOrEmpty(Model.ViewedByUser))
                {
                    <span class="glyphicon glyphicon-user color-red" title="@Model.ViewedByUser"> </span><span class="normal-weight color-red"> @Model.ViewedByUser</span>
                    <br /><br />
                }
                <div class="row">
                    <div class="col-sm-3">
                        <div class="@Model.ColorClassName">
                            <display-entry asp-for="Status" />
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <display-entry asp-for="AssignmentType"/>
                    </div>
                    <div class="col-sm-3">
                        <display-entry asp-for="OrderGroupNumber" />
                    </div>
                    <div class="col-sm-3">
                        <display-entry asp-for="CreatedAt" />
                    </div>
                </div>
            </section>
            <section aria-label="Bokningsuppgifter">
                <a class="collapsible-section" data-toggle="collapse" data-target="#orderInformation">
                    <h2><span class="glyphicon glyphicon-triangle-right" style="font-size:15px;margin-right:10px;"></span>Bokningsuppgifter</h2>
                </a>
                <hr />
                <div id="orderInformation">
                    <div class="row">
                        <div class="col-sm-4">
                            <display-entry asp-for="LanguageAndDialect" />
                        </div>
                        <div class="col-sm-4">
                            <display-entry asp-for="RegionName" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            LISTA MED TILLFÄLLEN!!
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-4">
                            @if (Model.RankedInterpreterLocationFirstAddressModel != null)
                            {
                                <display-entry asp-for="RankedInterpreterLocationFirstAddressModel.InterpreterLocation" label-override="Inställelsesätt i första hand" />
                                @if (!string.IsNullOrEmpty(Model.RankedInterpreterLocationFirstAddressModel.OffSiteContactInformation))
                                {
                                    <display-entry asp-for="RankedInterpreterLocationFirstAddressModel.OffSiteContactInformation" />
                                }
                                else
                                {
                                    <display-entry asp-for="RankedInterpreterLocationFirstAddressModel.Address" />
                                }
                            }
                            else
                            {
                                <label>Inställelsesätt i första hand</label>
                                <div class="no-value-info">Ej angivet</div>
                            }
                        </div>
                        <div class="col-sm-4">
                            @if (Model.RankedInterpreterLocationSecondAddressModel != null)
                            {
                                <display-entry asp-for="RankedInterpreterLocationSecondAddressModel.InterpreterLocation" label-override="Inställelsesätt i andra hand" />
                                @if (!string.IsNullOrEmpty(Model.RankedInterpreterLocationSecondAddressModel.OffSiteContactInformation))
                                {
                                    <display-entry asp-for="RankedInterpreterLocationSecondAddressModel.OffSiteContactInformation" />
                                }
                                else
                                {
                                    <display-entry asp-for="RankedInterpreterLocationSecondAddressModel.Address" />
                                }
                            }
                            else
                            {
                                <label>Inställelsesätt i andra hand</label>
                                <div class="no-value-info">Ej angivet</div>
                            }
                        </div>
                        <div class="col-sm-4">
                            @if (Model.RankedInterpreterLocationThirdAddressModel != null)
                            {
                                <display-entry asp-for="RankedInterpreterLocationThirdAddressModel.InterpreterLocation" label-override="Inställelsesätt i tredje hand" />
                                @if (!string.IsNullOrEmpty(Model.RankedInterpreterLocationThirdAddressModel.OffSiteContactInformation))
                                {
                                    <display-entry asp-for="RankedInterpreterLocationThirdAddressModel.OffSiteContactInformation" />
                                }
                                else
                                {
                                    <display-entry asp-for="RankedInterpreterLocationThirdAddressModel.Address" />
                                }
                            }
                            else
                            {
                                <label>Inställelsesätt i tredje hand</label>
                                <div class="no-value-info">Ej angivet</div>
                            }
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4">
                            @if (Model.LanguageHasAuthorizedInterpreter)
                            {
                                <label>Tolkens kompetensnivå</label>
                                <div class="no-value-info">
                                    Det valda språket saknar auktoriserade och utbildade tolkar i Kammarkollegiets tolkregister. Det preliminära priset är beräknat för arvodesnivå Övrig tolk.
                                </div>
                            }
                            else if (Model.RequestedCompetenceLevels.Any())
                            {

                                @if (Model.RequestedCompetenceLevelFirst.HasValue)
                                {
                                    <display-entry asp-for="RequestedCompetenceLevelFirst" asp-value-prefix="1. " label-override="@competenceInfo" />
                                }
                                @if (Model.RequestedCompetenceLevelSecond.HasValue)
                                {
                                    <display-entry asp-for="RequestedCompetenceLevelSecond" asp-value-prefix="2. " />
                                }
                            }
                            else
                            {
                                <label>Tolkens kompetensnivå</label>
                                <div class="no-value-info">
                                    Inget krav eller önskemål om specifik kompetensnivå har angetts i bokningsförfrågan.
                                    Det preliminära priset är beräknat för arvodesnivå Auktoriserad tolk.
                                    Slutlig arvodesnivå beror på tillsatt tolk enligt principen för kompetensprioritering.
                                </div>
                            }
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4">
                            <display-entry asp-for="Description" />
                        </div>
                        <div class="col-sm-4">
                            @if (Model.AttachmentListModel?.DisplayFiles?.Count > 0)
                            {
                                @await Html.PartialAsync("_FileList", Model.AttachmentListModel)
                            }
                            else
                            {
                                <label>Bifogade filer</label>
                                <div class="no-value-info">Inga filer har bifogats</div>
                            }
                        </div>
                    </div>
                    <br />
                </div>
            </section>

            <div class="row">
                <div class="col-sm-4">
                    @await Html.PartialAsync("_PriceInformationDisplay", Model.OrderCalculatedPriceInformationModel);
                </div>
                <div class="col-sm-4">
                    <div class="red-border-left">
                        <display-entry asp-for="ExpiresAt" />
                    </div>
                </div>
            </div>
            <form method="post">
                <input asp-for="RequestGroupId" type="hidden" />

                <div class="row">
                    <div class="col-sm-4">
                        <form-entry asp-for="InterpreterId" type="select" asp-items="SelectListService.GetInterpreters(Model.BrokerId).ToList()" help-link="@HelpLinkService.GenerateUrl("tolk")" />
                        <div class="collapse" id="new-interpreter">
                            <form-entry asp-for="NewInterpreterFirstName" />
                            <form-entry asp-for="NewInterpreterLastName" />
                            <form-entry asp-for="NewInterpreterOfficialInterpreterId" />
                            <form-entry asp-for="NewInterpreterEmail" />
                            <form-entry asp-for="NewInterpreterPhoneNumber" />
                        </div>
                        <div class="interpreter-information d-none">
                            <span class="glyphicon message-icon glyphicon-ok"></span>
                            <span class="info-message"></span>
                            <span title="" class="form-entry-information glyphicon glyphicon-info-sign d-none"
                                  data-original-title="Efter kontroll mot Kammarkollegiets publicerade tolkregister att tilldelad tolk uppfyller kravställd kompetensnivå har ingen verifiering kunnat ske. Det kan bero på att tolkens auktorisation inte längre är giltig eller ännu inte publicerats. Det kan också bero på att tolken valt att inte synas i det officiellt publicerade tolkregistret."></span>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        @if (Model.SpecificCompetenceLevelRequired)
                        {
                            <form-entry asp-for="InterpreterCompetenceLevel" type="select" asp-items="SelectListService.FilteredCompetenceLevels(Model.RequestedCompetenceLevels)" help-link="@HelpLinkService.GenerateUrl("tolkens-kompetensniva")" />
                        }
                        else
                        {
                            <form-entry asp-for="InterpreterCompetenceLevel" type="select" asp-items="SelectListService.CompetenceLevels" help-link="@HelpLinkService.GenerateUrl("tolkens-kompetensniva")" />
                        }
                    </div>
                    <div class="col-sm-4">
                            <form-entry asp-for="InterpreterLocation" type="select" asp-items="SelectListService.FilteredInterpreterLocations(Model.RankedInterpreterLocations)" help-link="@HelpLinkService.GenerateUrl("installelsesatt")" />
                    </div>
                </div>
                <input asp-for="Status" type="hidden" />
                @if (Model.AllowExceedingTravelCost)
                {
                    <div class="collapse" id="set-expected-travel-costs">
                        <div class="row">
                            <div class="col-sm-4 important-info">Kunden accepterar överskridande av gränsvärde för resor för detta uppdrag, dvs över 2 tim restid eller 100 km reslängd. Ange bedömd resekostnad. Ange 0 om uppdraget inte innebär resor.</div>
                            <div class="col-sm-4">
                                <form-entry asp-for="ExpectedTravelCosts" help-link="@HelpLinkService.GenerateUrl("forvantad-resekostnad")" />
                            </div>
                            <div class="col-sm-4">
                                <form-entry asp-for="ExpectedTravelCostInfo" />
                            </div>
                        </div>
                    </div>
                }
                <div class="row">
                    <div class="col-sm-4">
                        <label>Tillkommande krav</label> @HelpLinkService.Anchor("tillkommande-krav")<br />
                        @if (Model.RequiredRequirementAnswers.Any())
                        {
                            @for (var i = 0; i < Model.RequiredRequirementAnswers.Count(); ++i)
                            {
                                <div class="border detail-text">
                                    <span class="detail-text">@Model.RequiredRequirementAnswers[i].RequirementType.GetDescription(): @Model.RequiredRequirementAnswers[i].Description</span>
                                    <input asp-for="RequiredRequirementAnswers[i].OrderRequirementId" type="hidden" />
                                    <form-entry asp-for="RequiredRequirementAnswers[i].CanMeetRequirement" label-override="Kan uppfylla kravet" />
                                    <input asp-for="RequiredRequirementAnswers[i].IsRequired" type="hidden" />
                                </div>
                            }
                        }
                        else
                        {
                            <span class="no-value-info">Inga tillkommande krav är angivna</span>
                        }
                    </div>
                    <div class="col-sm-4">
                        <label>Tillkommande önskemål</label> @HelpLinkService.Anchor("tillkommande-onskemal")<br />
                        @if (Model.DesiredRequirementAnswers.Any())
                        {
                            @for (var i = 0; i < Model.DesiredRequirementAnswers.Count(); ++i)
                            {
                                <div class="border">
                                    <span class="detail-text">@Model.DesiredRequirementAnswers[i].RequirementType.GetDescription(): @Model.DesiredRequirementAnswers[i].Description</span>
                                    <input asp-for="DesiredRequirementAnswers[i].OrderRequirementId" type="hidden" />
                                    <form-entry asp-for="DesiredRequirementAnswers[i].CanMeetRequirement" label-override="Kan uppfylla önskemålet" />
                                    <form-entry asp-for="DesiredRequirementAnswers[i].Answer" />
                                    <input asp-for="DesiredRequirementAnswers[i].IsRequired" type="hidden" />
                                </div>

                            }
                        }
                        else
                        {
                            <span class="no-value-info">Inga tillkommande önskemål är angivna</span>
                        }
                    </div>
                    <div class="col-sm-4">
                        <input asp-for="CombinedMaxSizeAttachments" type="hidden" />
                        @await Html.PartialAsync("_FileList", new AttachmentListModel { AllowDelete = true, AllowDownload = true, AllowUpload = true, Files = Model.Files, Description = "Möjlighet att bifoga filer som kan vara relevanta för myndigheten", Title = string.Empty }, new ViewDataDictionary(ViewData) { { "helplink", HelpLinkService.PageName } })
                        <br />
                        <br />
                    </div>
                </div>

                <section aria-label="Myndighetens uppgifter">
                    <a class="collapsible-section" data-toggle="collapse" data-target="#customerInfo">
                        <h2><span class="glyphicon glyphicon-triangle-right" style="font-size:15px;margin-right:10px;"></span> Myndighetens uppgifter</h2>
                    </a>
                    <hr />
                    <div id="customerInfo">
                        <div class="row">
                            <div class="col-sm-4">
                                <display-entry asp-for="CustomerName" />
                                <display-entry asp-for="CreatedBy" />
                            </div>
                            <div class="col-sm-4">
                                <display-entry asp-for="CustomerUnitName" />
                                <display-entry asp-for="UnitName" />
                            </div>
                            <div class="col-sm-4">
                                <display-entry asp-for="CustomerOrganisationNumber" />
                                <display-entry asp-for="CustomerReferenceNumber" />
                            </div>
                        </div>
                    </div>
                </section>                <div class="row">
                    <div class="col-lg-4">
                        <a class="btn btn-large btn-warning do-not-check-dirty left-lg-button" id="cancel-go-back">Avbryt <span class="btn-remove-times">&times;</span></a>
                    </div>
                    <div class="col-lg-4 center-lg-button">
                        <button type="button" data-toggle="modal" data-target="#denyMessageDialog" class="btn btn-large btn-danger">Tacka nej till bokning</button>
                    </div>
                    <div class="col-lg-4">
                        <button id="Accept" class="btn btn-large btn-success right-lg-button">Acceptera <span class="center-glyphicon glyphicon glyphicon-ok"></span></button>
                    </div>
                </div>
            </form>
            <span id="basefile" class="d-none">
                <input asp-for="Files[0].Id" type="hidden" />
            </span>
        </div>

        @await Html.PartialAsync("_UploadFileDialog")
        <div id="denyMessageDialog" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h2 class="modal-title">@declineHeader</h2>
                    </div>
                    <div class="modal-body">
                        <form method="post" asp-action="Decline" class="do-not-check-dirty">
                            <input id="DeniedRequestGroupId" name="DeniedRequestGroupId" value="@Model.RequestGroupId" type="hidden" />
                            <form-entry asp-for="DenyMessage" />
                            <button type="submit" class="btn btn-default right-md-button do-not-check-dirty">Tacka nej</button>
                            <button type="button" class="btn btn-warning left-md-button do-not-check-dirty" data-dismiss="modal">Avbryt</button>
                            <br /><br />
                        </form>
                    </div>
                    <div class="modal-footer">
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@section Scripts {
    <environment include="Development">
        <script src="~/js/Request/ValidateInterpreter.js" asp-append-version="true"></script>
        <script src="~/js/RequestGroup/Process.js" asp-append-version="true"></script>
        <script src="~/js/Files.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/Request/ValidateInterpreter.min.js" asp-append-version="true"></script>
        <script src="~/js/RequestGroup/Process.min.js" asp-append-version="true"></script>
        <script src="~/js/Files.min.js" asp-append-version="true"></script>
    </environment>
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
