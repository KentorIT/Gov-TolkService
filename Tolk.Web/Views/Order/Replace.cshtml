@model Tolk.Web.Models.OrderModel
@inject SelectListService SelectListService
@using Tolk.Web.Services
@using Tolk.BusinessLogic.Utilities
@{
    ViewData["Title"] = "Ersätt avbokat avrop";
}

<div class="row">
    <form method="post">
        <div class="col-md-8">
            <h2>@ViewData["Title"]</h2>
            <display-entry asp-for="ReplacingOrderNumber" />
            <display-entry asp-for="RegionName" />
            <display-entry asp-for="BrokerName" />
            <display-entry asp-for="LanguageName" />
            <display-entry asp-for="SpecificCompetenceLevelRequired" />
            @if (Model.RequestedCompetenceLevels.Count != 0)
            {
                @if (Model.SpecificCompetenceLevelRequired)
                {
                    @if (Model.RequiredCompetenceLevelFirst.HasValue)
                    {
                        <display-entry asp-for="RequiredCompetenceLevelFirst" label-override="Kravad kompetensnivå " />
                    }
                    @if (Model.RequiredCompetenceLevelSecond.HasValue)
                    {
                        <display-entry asp-for="RequiredCompetenceLevelSecond" label-override="Alternativ kravad kompetensnivå" />
                    }
                }
                else
                {
                    @if (Model.RequestedCompetenceLevelFirst.HasValue)
                    {
                        <display-entry asp-for="RequestedCompetenceLevelFirst" label-override="Önskad kompetensnivå (förstahand)" />
                    }
                    @if (Model.RequestedCompetenceLevelSecond.HasValue)
                    {
                        <display-entry asp-for="RequestedCompetenceLevelSecond" label-override="Önskad kompetensnivå (andrahand)" />
                    }
                    @if (Model.RequestedCompetenceLevelThird.HasValue)
                    {
                        <display-entry asp-for="RequestedCompetenceLevelThird" label-override="Önskad kompetensnivå (tredjehand)" />
                    }
                }
            }
            else
            {
                <span>Inga önskemål kring kompetensnivå</span> <br /><br />
            }
            <display-entry asp-for="AssignmentType" />
            <display-entry asp-for="AllowMoreThanTwoHoursTravelTime" />
            @if (Model.OrderRequirements.Any(r => r.RequirementIsRequired))
            {
                <label>@Html.DisplayNameFor(m => m.OrderRequirements) (krav)</label>
                <ul>
                    @foreach (var req in Model.OrderRequirements.Where(r => r.RequirementIsRequired))
                    {
                        <li>
                            @req.RequirementDescription (@EnumHelper.GetDescription(req.RequirementType))
                            @if (req.CanSatisfyRequirement.HasValue)
                            {
                                <br />
                                <span class="requirement-answer">Svar: @req.Answer (@(req.CanSatisfyRequirement.Value ? "uppfyller" : "uppfyller inte"))</span>
                            }
                        </li>
                    }
                </ul>
            }
            @if (Model.OrderRequirements.Any(r => !r.RequirementIsRequired))
            {
                <label>@Html.DisplayNameFor(m => m.OrderRequirements) (önskemål)</label>
                <ul>
                    @foreach (var req in Model.OrderRequirements.Where(r => !r.RequirementIsRequired))
                    {
                        <li>
                            @req.RequirementDescription (@EnumHelper.GetDescription(req.RequirementType))
                            @if (req.CanSatisfyRequirement.HasValue)
                            {
                                <br />
                                <span class="requirement-answer">Svar: @req.Answer (@(req.CanSatisfyRequirement.Value ? "uppfyller" : "uppfyller inte"))</span>
                            }
                        </li>
                    }
                </ul>
            }
            @if (!Model.UseRankedInterpreterLocation)
            {
                <display-entry asp-for="InterpreterLocation" />
            }
            else
            {
                <label>Önskat inställelsesätt, helst överst</label>
                <ul>
                    @foreach (var location in Model.InterpreterLocations.OrderBy(l => l.Rank))
                    {
                        <li>
                            @EnumHelper.GetDescription(location.InterpreterLocation)
                        </li>
                    }
                </ul>
            }
            <form-entry asp-for="CustomerReferenceNumber" />
            <form-entry asp-for="ContactPersonId" type="select" asp-items="SelectListService.OtherContactPersons" />
            <form-entry asp-for="UnitName" />

            @if (Model.UseAddress)
            {
                <form-entry asp-for="LocationStreet" />
                <form-entry asp-for="LocationZipCode" />
                <form-entry asp-for="LocationCity" />
            }
            @if (Model.UseOffSiteInformation)
            {
                <form-entry asp-for="OffSiteAssignmentType" type="select" asp-items="SelectListService.OffSiteAssignmentTypes" />
                <form-entry asp-for="OffSiteContactInformation" />
            }
            <form-entry asp-for="TimeRange" />
            <form-entry asp-for="Description" />
            <button class="btn btn-default">Skapa ersättningsuppdrag</button>
            <a class="btn btn-warning pull-right" asp-controller="Home" asp-action="Index">Avbryt</a>
        </div>
    </form>
</div>
@section Scripts {
    <environment include="Development">
        <script src="~/js/Order/Replace.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/Order/Replace.min.js" asp-append-version="true"></script>
    </environment>
    @await Html.PartialAsync("_ValidationScriptsPartial")
}