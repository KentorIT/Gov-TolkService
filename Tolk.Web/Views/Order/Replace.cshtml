@model Tolk.Web.Models.ReplaceOrderModel
@inject SelectListService SelectListService
@using Tolk.Web.Services
@using Tolk.BusinessLogic.Utilities
@{
    ViewData["Title"] = "Ersätt avbokat uppdrag";
    var competenceInfo = Model.SpecificCompetenceLevelRequired ? "Krav på kompetensnivå tolk" : "Önskemål om kompetensnivå tolk";
    var customerUnitItems = SelectListService.ActiveCustomerUnitsForUser();
}
<section aria-label="@ViewData["Title"]">
    <div class="row">
        <form method="post">
            <input asp-for="FrameworkAgreementResponseRuleset" type="hidden" />

            <div class="col-sm-12">
                <h1 class="normal-weight">@ViewData["Title"]</h1>
                <hr />
                <div class="row">
                    <div class="col-sm-4">
                        <display-entry asp-for="ReplacingOrderNumber" />
                    </div>
                    <div class="col-sm-4">
                        <display-entry asp-for="RegionName" />
                    </div>
                    <div class="col-sm-4">
                        <display-entry asp-for="BrokerName" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        <display-entry asp-for="LanguageName" />
                    </div>
                    <div class="col-sm-4">
                        <display-entry asp-for="SpecificCompetenceLevelRequired" />
                    </div>
                    <div class="col-sm-4">
                        @if (Model.RequestedCompetenceLevels.Any())
                        {
                            @if (Model.RequestedCompetenceLevelFirst.HasValue)
                            {
                                <display-entry asp-for="RequestedCompetenceLevelFirst" asp-value-prefix="1. " label-override="@competenceInfo" />
                            }
                            @if (Model.RequestedCompetenceLevelSecond.HasValue)
                            {
                                <display-entry asp-for="RequestedCompetenceLevelSecond" asp-value-prefix="2. " />
                            }
                        }
                        else
                        {
                            <span>Inga önskemål om kompetensnivå</span> <br /><br />
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        <display-entry asp-for="AssignmentType" />
                    </div>
                    <div class="col-sm-4">
                        <label>Inställelsesätt på det ersatta uppdraget</label>
                        <display-entry asp-for="RankedInterpreterLocationFirstAddressModel.CompactInformation" />
                        @if (Model.RankedInterpreterLocationSecondAddressModel != null)
                        {
                            <display-entry asp-for="RankedInterpreterLocationSecondAddressModel.CompactInformation" />
                        }
                        @if (Model.RankedInterpreterLocationThirdAddressModel != null)
                        {
                            <display-entry asp-for="RankedInterpreterLocationThirdAddressModel.CompactInformation" />
                        }
                    </div>
                    @if (Model.IsOnSiteOrOffSiteDesignatedLocationSelected && Model.AllowExceedingTravelCost != null && Model.AllowExceedingTravelCost.SelectedItem != null)
                    {
                        <div class="col-sm-4">
                            <display-entry asp-for="AllowExceedingTravelCost" />
                        </div>
                    }
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        @if (Model.IsCreatorInterpreterUser != null)
                        {
                            <display-entry asp-for="IsCreatorInterpreterUser" />
                        }
                        else
                        {
                            <label>Är tolkanvändare samma person som bokar</label>
                            <div class="no-value-info">Ej angivet</div>
                        }
                    </div>
                    <div class="col-sm-4">
                        @if (Model.OrderRequirements.Any(r => r.RequirementIsRequired))
                        {
                            <label>Tillkommande krav</label>
                            <ul>
                                @foreach (var req in Model.OrderRequirements.Where(r => r.RequirementIsRequired))
                                {
                                    <li>
                                        @req.RequirementDescription (@EnumHelper.GetDescription(req.RequirementType))
                                        @if (req.CanSatisfyRequirement.HasValue)
                                        {
                                            <br />
                                            <span class="requirement-answer">Svar: @req.Answer (@(req.CanSatisfyRequirement.Value ? "uppfyller" : "uppfyller inte"))</span>
                                        }
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                    <div class="col-sm-4">
                        @if (Model.OrderRequirements.Any(r => !r.RequirementIsRequired))
                        {
                            <label>Tillkommande önskemål</label>
                            <ul>
                                @foreach (var req in Model.OrderRequirements.Where(r => !r.RequirementIsRequired))
                                {
                                    <li>
                                        @req.RequirementDescription (@EnumHelper.GetDescription(req.RequirementType))
                                        @if (req.CanSatisfyRequirement.HasValue)
                                        {
                                            <br />
                                            <span class="requirement-answer">Svar: @req.Answer (@(req.CanSatisfyRequirement.Value ? "uppfyller" : "uppfyller inte"))</span>
                                        }
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <h2 class="no-padding-margin">Inställelsesätt <span class="form-entry-information glyphicon glyphicon-info-sign" title="Om du bara väljer ett inställelsesätt så betraktas det som ett krav. Om du väljer flera alternativa sätt så betraktas det översta som ditt primära val, men förmedlingen kan välja något av de du tillhandahåller."></span></h2>
                    </div>
                </div>
                <div class="row  ranked-InterpreterLocation">
                    <div class="col-sm-4 location-group">
                        <form-entry asp-for="RankedInterpreterLocationFirst" type="select" asp-items="SelectListService.InterpreterLocations" class="allow-clear interpreter-group" />
                        <div class="address-RankedInterpreterLocationFirst grouped-form-boxes">
                            <div class="address-information">
                                <form-entry asp-for="RankedInterpreterLocationFirstAddressModel.LocationStreet" />
                                <form-entry asp-for="RankedInterpreterLocationFirstAddressModel.LocationCity" />
                            </div>
                            <div class="off-site-information">
                                <form-entry asp-for="RankedInterpreterLocationFirstAddressModel.OffSiteContactInformation" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4 interpreter-location-second location-group bg-gray">
                        <form-entry asp-for="RankedInterpreterLocationSecond" type="select" asp-items="SelectListService.InterpreterLocations" class="allow-clear interpreter-group" />
                        <div class="address-RankedInterpreterLocationSecond">
                            <div class="address-information">
                                <form-entry asp-for="RankedInterpreterLocationSecondAddressModel.LocationStreet" />
                                <form-entry asp-for="RankedInterpreterLocationSecondAddressModel.LocationCity" />
                            </div>
                            <div class="off-site-information">
                                <form-entry asp-for="RankedInterpreterLocationSecondAddressModel.OffSiteContactInformation" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4 interpreter-location-third location-group">
                        <form-entry asp-for="RankedInterpreterLocationThird" type="select" asp-items="SelectListService.InterpreterLocations" class="allow-clear interpreter-group" />
                        <div class="address-RankedInterpreterLocationThird">
                            <div class="address-information">
                                <form-entry asp-for="RankedInterpreterLocationThirdAddressModel.LocationStreet" />
                                <form-entry asp-for="RankedInterpreterLocationThirdAddressModel.LocationCity" />
                            </div>
                            <div class="off-site-information">
                                <form-entry asp-for="RankedInterpreterLocationThirdAddressModel.OffSiteContactInformation" />
                            </div>
                        </div>
                    </div>
                    <div id="interpreterLocationValidator" class="d-none text-danger body"></div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        <display-entry asp-for="ReplacedTimeRange" />
                        <form-entry asp-for="ReplacedTimeRange" type="hidden" />
                    </div>
                    <div class="col-sm-8">
                        <form-entry asp-for="TimeRange" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        @if (Model.UseAttachments)
                        {
                            @await Html.PartialAsync("_FileList", Model.AttachmentListModel)
                        }
                    </div>
                    <div class="col-sm-8">
                        <form-entry asp-for="Description" />
                    </div>
                </div>
                <h1 class="normal-weight">Myndighetens uppgifter</h1>
                <hr />
                <div class="row">
                    <div class="col-sm-4">
                        <form-entry asp-for="ContactPersonId" type="select" asp-items="SelectListService.OtherContactPersons" />
                        <form-entry asp-for="InvoiceReference" />
                    </div>
                    <div class="col-sm-4">
                        <form-entry asp-for="UnitName" />
                        @if (customerUnitItems != null && customerUnitItems.Any())
                        {
                            <display-entry asp-for="CustomerUnitName" />
                        }
                    </div>
                    <div class="col-sm-4">
                        <form-entry asp-for="CustomerReferenceNumber" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <button class="btn btn-default btn-large pull-right" id="send">Skapa ersättningsuppdrag</button>
                        <a class="btn btn-warning btn-large pull-left do-not-check-dirty" asp-controller="Home" asp-action="Index">Avbryt <span class="btn-remove-times">&times;</span></a>
                    </div>
                </div>
            </div>
        </form>
        <span id="basefile" class="d-none">
            <input asp-for="Files[0].Id" type="hidden" />
        </span>
    </div>
    @await Html.PartialAsync("_UploadFileDialog")
</section>

@section Scripts {
    <environment include="Development">
        <script src="~/js/Order/Replace.js" asp-append-version="true"></script>
        <script src="~/js/Order/HandleInterpreterLocations.js" asp-append-version="true"></script>
        <script src="~/js/Files.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/Order/Replace.min.js" asp-append-version="true"></script>
        <script src="~/js/Order/HandleInterpreterLocations.min.js" asp-append-version="true"></script>
        <script src="~/js/Files.min.js" asp-append-version="true"></script>
    </environment>
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
