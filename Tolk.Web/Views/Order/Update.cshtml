@model Tolk.Web.Models.UpdateOrderModel
@inject SelectListService SelectListService
@inject HelpLinkService HelpLinkService
@using Tolk.Web.Services
@using Tolk.BusinessLogic.Utilities
@{
    ViewData["Title"] = "Ändra bokning " + Model.OrderNumber;
    var competenceInfo = Model.SpecificCompetenceLevelRequired ? "Krav på kompetensnivå tolk" : "Önskemål om kompetensnivå tolk";
    HelpLinkService.PageName = "myndighet-andra-bokning";
}
<section aria-label="@ViewData["Title"]">
    <div class="row">
        <form method="post">
            <div class="col-sm-12">
                <h1 class="normal-weight">@ViewData["Title"] @HelpLinkService.HeaderAnchor()</h1>
                <hr />
                <div class="row">
                    <div class="col-sm-4">
                        <display-entry asp-for="LanguageName" />
                    </div>
                    <div class="col-sm-4">
                        <display-entry asp-for="RegionName" />
                    </div>
                    <div class="col-sm-4">
                        <display-entry asp-for="TimeRange" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        <display-entry asp-for="AssignmentType" />
                    </div>
                    <div class="col-sm-4">
                        @if (Model.LanguageHasAuthorizedInterpreter.HasValue && !Model.LanguageHasAuthorizedInterpreter.Value)
                        {
                            <label>Tolkens kompetensnivå</label>
                            <div class="no-value-info">
                                Det valda språket saknar auktoriserade och utbildade tolkar i Kammarkollegiets tolkregister. Det preliminära priset är beräknat för arvodesnivå Övrig tolk.
                            </div>
                        }
                        else if (Model.RequestedCompetenceLevels.Any())
                        {

                            @if (Model.RequestedCompetenceLevelFirst.HasValue)
                            {
                                <display-entry asp-for="RequestedCompetenceLevelFirst" asp-value-prefix="1. " label-override="@competenceInfo" />
                            }
                            @if (Model.RequestedCompetenceLevelSecond.HasValue)
                            {
                                <display-entry asp-for="RequestedCompetenceLevelSecond" asp-value-prefix="2. " />
                            }
                        }
                        else
                        {
                            <label>Tolkens kompetensnivå</label>
                            <div class="no-value-info">
                                Inget krav eller önskemål om specifik kompetensnivå har angetts i bokningsförfrågan.
                                Det preliminära priset är beräknat för arvodesnivå Auktoriserad tolk.
                                Slutlig arvodesnivå beror på tillsatt tolk enligt principen för kompetensprioritering.
                            </div>
                        }
                    </div>
                    <div class="col-sm-4">
                        @if (Model.CreatorIsInterpreterUser != null && Model.CreatorIsInterpreterUser.SelectedItem != null)
                        {
                            <display-entry asp-for="CreatorIsInterpreterUser" />
                        }
                        else
                        {
                            <label>Är tolkanvändare samma person som bokar</label>
                            <div class="no-value-info">Ej angivet</div>
                        }
                    </div>
                </div>
                <div class="row">
                    @if (Model.IsOnSiteOrOffSiteDesignatedLocationSelected && Model.AllowExceedingTravelCost != null && Model.AllowExceedingTravelCost.SelectedItem != null)
                    {
                        <div class="col-sm-4">
                            <display-entry asp-for="AllowExceedingTravelCost" />
                        </div>
                    }
                    <div class="col-sm-4">
                        <label>Tillkommande krav</label>
                        @if (Model.OrderRequirements.Any(r => r.RequirementIsRequired))
                        {
                            <ul>
                                @foreach (var req in Model.OrderRequirements.Where(r => r.RequirementIsRequired))
                                {
                                    <li class="detail-text">
                                        @EnumHelper.GetDescription(req.RequirementType): @req.RequirementDescription
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <div class="no-value-info">Inga tillkommande krav är angivna</div>
                        }
                    </div>
                    <div class="col-sm-4">
                        <label>Tillkommande önskemål</label>
                        @if (Model.OrderRequirements.Any(r => !r.RequirementIsRequired))
                        {
                            <ul>
                                @foreach (var req in Model.OrderRequirements.Where(r => !r.RequirementIsRequired))
                                {
                                    <li class="detail-text">
                                        @EnumHelper.GetDescription(req.RequirementType): @req.RequirementDescription
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <div class="no-value-info">Inga tillkommande önskemål är angivna</div>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        <display-entry asp-for="SelectedInterpreterLocation" />
                        @if (!string.IsNullOrEmpty(Model.LocationStreet))
                        {
                            <form-entry asp-for="LocationStreet" />
                            <display-entry asp-for="LocationCity" />
                        }
                        else
                        {
                            <form-entry asp-for="OffSiteContactInformation" />
                        }
                    </div>
                    <div class="col-sm-4">
                        @if (Model.UseAttachments)
                        {
                            @await Html.PartialAsync("_FileList", new AttachmentListModel { AllowDelete = true, AllowDownload = true, AllowUpload = true, Files = Model.Files, Description = "Möjlighet att bifoga filer som kan vara relevanta vid tillsättning av tolk", Title = string.Empty })
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-8">
                        <form-entry asp-for="Description" />
                    </div>
                </div>
                <input asp-for="RankedInterpreterLocationFirst" type="hidden" />
                <input asp-for="OrderId" type="hidden" />
                <h1 class="normal-weight">Myndighetens uppgifter</h1>
                <hr />
                <div class="row">
                    <div class="col-sm-4">
                        <form-entry asp-for="ContactPersonId" type="select" asp-items="SelectListService.OtherContactPersons" class="allow-clear" />
                        <form-entry asp-for="InvoiceReference" />
                    </div>
                    <div class="col-sm-4">
                        <form-entry asp-for="UnitName" />
                        <display-entry asp-for="CustomerUnitName" />
                    </div>
                    <div class="col-sm-4">
                        <form-entry asp-for="CustomerReferenceNumber" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <a class="btn btn-warning btn-large pull-left do-not-check-dirty" href="@Url.Action("View", new { id = Model.OrderId })">Avbryt <span class="btn-remove-times">&times;</span></a>
                        <button class="btn btn-default btn-large pull-right disable-on-click">Ändra bokning</button>
                    </div>
                </div>
            </div>
        </form>
        <span id="basefile" class="d-none">
            <input asp-for="Files[0].Id" type="hidden" />
        </span>
    </div>
    @await Html.PartialAsync("_UploadFileDialog")
</section>

@section Scripts {
    <environment include="Development">
        <script src="~/js/Files.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/Files.min.js" asp-append-version="true"></script>
    </environment>
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
