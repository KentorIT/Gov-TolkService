@model Tolk.Web.Models.RequestModel
@using Tolk.BusinessLogic.Enums
@{
    ViewData["Title"] = "Bokningsförfrågan - " + Model.OrderModel.OrderNumber;
    bool isRequisitionAvailable = (bool?)Model.RequisitionId.HasValue ?? false;
    bool isComplaintAvailable = (bool?)Model.ComplaintId.HasValue ?? false;
    string requisitionPath = isRequisitionAvailable ? "Requisition/View?Id=" + Model.RequisitionId + "&returnPartial=true" : "#";
    string complaintPath = isComplaintAvailable ? "Complaint/View?Id=" + Model.ComplaintId + "&returnPartial=true" : "#";
}
@await Html.PartialAsync("_OrderHeader", Model.OrderModel, new ViewDataDictionary(ViewData) { { "header", ViewData["Title"] } })
<ul class="nav nav-tabs nav-justified">
    <li class="active"><a data-toggle="tab" href="#request">Bokning</a></li>
    <li class='@(isRequisitionAvailable ? "" : "disabled")'><a id="requisitionTab" data-toggle='@(isRequisitionAvailable ? "tab" : "")' href="#requisition" onclick="changeTab(this, '@requisitionPath', '#requisition')">Rekvisition</a></li>
    <li class='@(isComplaintAvailable ? "" : "disabled")'><a id="complaintTab" data-toggle='@(isComplaintAvailable ? "tab" : "")' href="#complaint" onclick="changeTab(this, '@complaintPath', '#complaint')">Reklamation</a></li>
</ul>
<input asp-for="RequestId" type="hidden" />
<div class="tab-content">
    <div id="request" class="tab-pane fade in active">
        <div class="row">
            <div class="col-sm-12">
                @if (Model.AllowConfirmCancellation)
                {
                    <br />
                    @if (!string.IsNullOrWhiteSpace(Model.Info48HCancelledByCustomer))
                    {
                        <div class="important-info">@Model.Info48HCancelledByCustomer</div>
                    }
                    <form method="post" asp-action="ConfirmCancellation">
                        <input asp-for="RequestId" type="hidden" />
                        <button class="btn btn-primary btn-large pull-right">Bekräfta avbokning <span class="center-glyphicon glyphicon glyphicon-ok"></span></button>
                    </form>
                    <br /><br />
                }
                @if (Model.AllowConfirmationDenial)
                {
                    <br />
                    <form method="post" asp-action="ConfirmDenial">
                        <input asp-for="RequestId" type="hidden" />
                        <button class="btn btn-primary btn-large pull-right">Arkivera <span class="center-glyphicon glyphicon glyphicon-ok"></span></button>
                    </form>
                    <br /><br />
                }
                @await Html.PartialAsync("_RequestSummary", Model, new ViewDataDictionary(ViewData) { { "showHeader", false }, { "isBroker", true } })
                <div class="row">
                    @if (Model.RequestCalculatedPriceInformationModel != null)
                    {
                        <div class="col-sm-6">
                            @await Html.PartialAsync("_PriceInformationDisplay", Model.RequestCalculatedPriceInformationModel)
                        </div>
                    }
                    @if (Model.OrderCalculatedPriceInformationModel != null)
                    {
                        <div class="col-sm-6">
                            @await Html.PartialAsync("_PriceInformationDisplay", Model.OrderCalculatedPriceInformationModel)
                        </div>
                    }
                </div>
                @await Html.PartialAsync("_OrderSummary", Model.OrderModel)
                @await Html.PartialAsync("_CustomerOrganizationInfo", Model.OrderModel)
                @if (!string.IsNullOrWhiteSpace(Model.Info48HCancelledByCustomer) && (Model.Status == RequestStatus.CancelledByCreatorWhenApproved && !Model.AllowConfirmCancellation))
                {
                    <div class="important-info">@Model.Info48HCancelledByCustomer</div>
                }
                <div class="row">
                    <div class="col-sm-6">
                        @if (Model.AllowCancellation)
                        {
                            <form method="post" class="cancel-form" asp-action="Cancel">
                                <input asp-for="RequestId" type="hidden" />
                                <input name="CancelMessage" type="hidden" />
                                <button class="btn cancel-button btn-danger btn-large">Avboka uppdrag</button>
                            </form>
                        }
                        @if (Model.AllowRequisitionRegistration)
                        {
                            <a class="btn btn-danger btn-large pull-left" href="@Url.Action("Create", "Requisition", new { id = Model.RequestId })">Registrera rekvisition</a>
                        }
                    </div>
                    <div class="col-sm-6">
                        @if (Model.AllowInterpreterChange)
                        {
                            <a class="btn btn-primary btn-large pull-right" href="@Url.Action("Change", "Request", new { id = Model.RequestId })">Byt tolk för uppdraget</a>
                        }
                    </div>
                </div>
                <div id="cancelMessageDialog" class="modal fade" role="dialog">
                    <div class="modal-dialog">
                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">Meddelande vid avbokning</h4>
                                <h6>Du måste ange en orsak till avbokningen. Observera att avbokning, beroende på omständighet, kan vara förknippad med vite.</h6>
                            </div>
                            <div class="modal-body">
                                <form class="do-not-check-dirty">
                                    <form-entry asp-for="CancelMessage" />
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-warning do-not-check-dirty pull-left" data-dismiss="modal">Avbryt</button>
                                <button type="button" class="btn btn-default send-message pull-right">Skicka</button>
                            </div>
                        </div>
                    </div>
                </div>
                @await Html.PartialAsync("_EventLog", Model.EventLog, new ViewDataDictionary(ViewData) { { "header", "Bokningshändelser" }, { "id", "EventLog_Request" } })
            </div>
        </div>
    </div>
    <div id="requisition" class="tab-pane fade">

    </div>
    <div id="complaint" class="tab-pane fade">

    </div>
</div>
@section Scripts {
    <environment include="Development">
        <script src="~/js/Request/Process.js" asp-append-version="true"></script>
        <script src="~/js/Complaint/View.js" asp-append-version="true"></script>
        <script src="~/js/Files.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/Request/Process.min.js" asp-append-version="true"></script>
        <script src="~/js/Complaint/View.min.js" asp-append-version="true"></script>
        <script src="~/js/Files.min.js" asp-append-version="true"></script>
    </environment>
    @await Html.PartialAsync("_ValidationScriptsPartial")
}

