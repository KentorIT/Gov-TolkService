@model OrderViewModel
@using Tolk.BusinessLogic.Enums
@{
    ViewData["Title"] = "Bokningsförfrågan - " + Model.OrderNumber;
    bool isRequisitionAvailable = (bool?)Model.RequisitionId.HasValue ?? false;
    bool isComplaintAvailable = (bool?)Model.ComplaintId.HasValue ?? false;
    string requisitionPath = isRequisitionAvailable ? "Requisition/View?Id=" + Model.RequisitionId + "&returnPartial=true" : "#";
    string complaintPath = isComplaintAvailable ? "Complaint/View?Id=" + Model.ComplaintId + "&returnPartial=true" : "#";
}
@await Html.PartialAsync("_OrderHeader", Model, new ViewDataDictionary(ViewData) { { "header", ViewData["Title"] } })
<ul class="nav nav-tabs nav-justified">
    <li class="active"><a data-toggle="tab" href="#request">Bokning</a></li>
    <li class='@(isRequisitionAvailable ? "" : "disabled")'><a id="requisitionTab" data-toggle='@(isRequisitionAvailable ? "tab" : "")' href="#requisition" onclick="changeTab(this, '@requisitionPath', '#requisition')">Rekvisition</a></li>
    <li class='@(isComplaintAvailable ? "" : "disabled")'><a id="complaintTab" data-toggle='@(isComplaintAvailable ? "tab" : "")' href="#complaint" onclick="changeTab(this, '@complaintPath', '#complaint')">Reklamation</a></li>
</ul>
<input asp-for="RequestId" type="hidden" />
<div class="tab-content">
    <div id="request" class="tab-pane fade in active">
        <div class="row">
            <div class="col-sm-12">
                @if (Model.IsInOrderGroup)
                {
                    <div class="row">
                        <div class="col-xs-12">
                            <br />
                            <div class="@Model.GroupStatusCssClassColor">
                                Tillhör sammanhållen bokning: <a asp-controller="RequestGroup" asp-action="View" asp-route-id="@Model.ActiveRequest.RequestGroupId">@Model.OrderGroupNumber</a>
                            </div>
                        </div>
                    </div>
                }
                @if (Model.AllowConfirmNoRequisition)
                {
                    <br />
                    <div class="border">
                        <div class="row">
                            <br />
                            @if (Model.AllowConfirmNoRequisition)
                            {
                                <div class="col-xs-12 important-info">
                                    Nu kan du registrera en rekvisition för uppdraget. Vill du inte göra rekvisition så kan du välja valet Arkivera utan rekvisition, då kommer ärendet tas bort från listan Aktiva bokningar, men du kan när som helst söka upp bokningen och göra en rekvisition vid ett senare tillfälle.
                                </div>
                            }
                            @if (Model.AllowRequisitionRegistration)
                            {
                                <div class="col-xs-6">
                                    <a class="btn btn-danger btn-large pull-left" href="@Url.Action("Create", "Requisition", new { id = Model.RequestId })">Registrera rekvisition</a>
                                </div>
                            }
                            @if (Model.AllowConfirmNoRequisition)
                            {
                                <div class="col-xs-6">
                                    <form method="post" action="@Url.Action("ConfirmNoRequisition", new { RequestId = Model.RequestId })" asp-antiforgery="true">
                                        <button class="btn btn-primary btn-large pull-right">Arkivera utan rekvisition</button>
                                    </form>
                                </div>
                            }
                        </div>
                    </div>
                }
                @if (Model.AllowConfirmCancellationByCreator)
                {
                    <br />
                    @if (!string.IsNullOrWhiteSpace(Model.ActiveRequest.Info48HCancelledByCustomer))
                    {
                        <div class="important-info">@Model.ActiveRequest.Info48HCancelledByCustomer</div>
                    }
                    <form method="post" action="@Url.Action("ConfirmCancellation", new { RequestId = Model.RequestId })" asp-antiforgery="true">
                        <button class="btn btn-primary btn-large pull-right">Bekräfta avbokning <span class="center-glyphicon glyphicon glyphicon-ok"></span></button>
                    </form>
                    <br /><br />
                }
                @if (Model.AllowConfirmationDenial)
                {
                    <br />
                    <form method="post" action="@Url.Action("ConfirmDenial", new { RequestId = Model.RequestId })" asp-antiforgery="true">
                        <button class="btn btn-primary btn-large pull-right">Arkivera <span class="center-glyphicon glyphicon glyphicon-ok"></span></button>
                    </form>
                    <br /><br />
                }
                @if (Model.AllowConfirmNoAnswer)
                {
                    <br />
                    <form method="post" action="@Url.Action("ConfirmNoAnswer", new { RequestId = Model.RequestId })" asp-antiforgery="true">
                        <button class="btn btn-primary btn-large pull-right">Arkivera <span class="center-glyphicon glyphicon glyphicon-ok"></span></button>
                    </form>
                    <br /><br />
                }
                @if (!string.IsNullOrEmpty(Model.DisplayOrderChangeText))
                {
                    <br />
                    <div class="border">
                        <div class="row">
                            <div class="col-xs-8 important-info">
                                <display-entry asp-for="DisplayOrderChangeText" />
                            </div>
                            <div class="col-xs-4">
                                <form method="post" action="@Url.Action("ConfirmOrderChange", new ConfirmOrderChangeModel { ConfirmedOrderChangeLogEntries = Model.ConfirmedOrderChangeLogEntries, RequestId = Model.ActiveRequest.RequestId })" asp-antiforgery="true">
                                    <button class="btn btn-primary btn-large pull-right">Bekräfta ändring <span class="center-glyphicon glyphicon glyphicon-ok"></span></button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
                @await Html.PartialAsync("_RequestSummary", Model.ActiveRequest, new ViewDataDictionary(ViewData) { { "showHeader", false }, { "isBroker", true } })
                <div class="row">
                    @if (Model.ActiveRequestPriceInformationModel?.TotalPriceToDisplay > 0)
                    {
                        <div class="col-sm-6">
                            @await Html.PartialAsync("_PriceInformationDisplay", Model.ActiveRequestPriceInformationModel)
                        </div>
                    }
                    @if (Model.OrderCalculatedPriceInformationModel != null)
                    {
                        <div class="col-sm-6">
                            @await Html.PartialAsync("_PriceInformationDisplay", Model.OrderCalculatedPriceInformationModel)
                        </div>
                    }
                </div>
                @if (Model.AllowRequisitionRegistration && !Model.AllowConfirmNoRequisition)
                {
                    <div class="row">
                        <div class="col-sm-12">
                            <a class="btn btn-danger btn-large pull-left" href="@Url.Action("Create", "Requisition", new { id = Model.RequestId })">Registrera rekvisition</a>
                        </div>
                    </div>
                }
                @await Html.PartialAsync("_OrderSummary", Model, new ViewDataDictionary(ViewData) { { "displayGeneralOrderInfo", false } })
                @await Html.PartialAsync("_CustomerOrganizationInfo", Model)
                @if (!string.IsNullOrWhiteSpace(Model.ActiveRequest.Info48HCancelledByCustomer) && Model.RequestStatus == RequestStatus.CancelledByCreatorWhenApproved && !Model.AllowConfirmCancellation)
                {
                    <div class="important-info">@Model.ActiveRequest.Info48HCancelledByCustomer</div>
                }
                @if (Model.AllowRequestCancellation || Model.ActiveRequest.AllowInterpreterChange)
                {
                    <div class="row">
                        <div class="col-sm-6">
                            @if (Model.AllowRequestCancellation)
                            {
                                <form method="post" class="cancel-form" action="@Url.Action("Cancel", new { RequestId = Model.RequestId })" asp-antiforgery="true">
                                    <input name="CancelMessage" type="hidden" />
                                    <button class="btn cancel-button btn-danger btn-large">Avboka uppdrag</button>
                                </form>
                            }
                        </div>
                        <div class="col-sm-6">
                            @if (Model.ActiveRequest.AllowInterpreterChange)
                            {
                                <a class="btn btn-primary btn-large pull-right" href="@Url.Action("ChangeInterpreter", new { id = Model.RequestId })">Byt tolk för uppdraget</a>
                            }
                        </div>
                    </div>
                }
                <div id="cancelMessageDialog" class="modal fade" role="dialog">
                    <div class="modal-dialog">
                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h2 class="modal-title">Meddelande vid avbokning</h2>
                                <p>Du måste ange en orsak till avbokningen. Observera att avbokning, beroende på omständighet, kan vara förknippad med vite.</p>
                            </div>
                            <div class="modal-body">
                                <form class="do-not-check-dirty">
                                    <form-entry asp-for="CancelMessage" />
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-warning do-not-check-dirty pull-left" data-dismiss="modal">Avbryt</button>
                                <button type="button" class="btn btn-default send-message pull-right">Skicka</button>
                            </div>
                        </div>
                    </div>
                </div>
                @await Html.PartialAsync("_EventLog", Model.EventLog)
            </div>
        </div>
    </div>
    <div id="requisition" class="tab-pane fade">
    </div>
    <div id="complaint" class="tab-pane fade">
    </div>
</div>
@section Scripts {
    <environment include="Development">
        <script src="~/js/Request/View.js" asp-append-version="true"></script>
        <script src="~/js/Complaint/View.js" asp-append-version="true"></script>
        <script src="~/js/Files.js" asp-append-version="true"></script>
        <script src="~/js/RequestView.js" asp-append-version="true"></script>
        <script src="~/js/EvenLogLoading.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/Request/View.min.js" asp-append-version="true"></script>
        <script src="~/js/Complaint/View.min.js" asp-append-version="true"></script>
        <script src="~/js/Files.min.js" asp-append-version="true"></script>
        <script src="~/js/RequestView.min.js" asp-append-version="true"></script>
        <script src="~/js/EvenLogLoading.min.js" asp-append-version="true"></script>
    </environment>
    @await Html.PartialAsync("_ValidationScriptsPartial")
}

